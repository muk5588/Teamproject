<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="board.dao.BoardDao">
	
	<sql id="selectBoard">
		SELECT 
			boardno, title, content, nickname, createdate
		FROM board
	</sql>
	
	<sql id="search">
				<if test="search != null and searchKind != null">
				<choose>
				 <when test="searchKind.equals('title')">
					WHERE title Like '%${search}%'
				 </when>
				 <when test="searchKind.equals('content')">
					WHERE content Like '%${search}%'
				 </when>
				</choose>
				</if>
	</sql>
	
	<select id="selectAll" resultType="Board" parameterType="util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				<include refid="selectBoard" />
				<include refid="search"/>
				ORDER BY boardno DESC
			) B
		)
		<where>
			AND rnum BETWEEN #{startNo } AND #{endNo}
		</where>
		
	</select>
	
	<select id="selectAllRecomm" resultType="HashMap"  parameterType="util.Paging">
		SELECT A.boardno boardno, A.title, good
		FROM (
			SELECT rownum rnum , B.*
			FROM (
				SELECT
					boardno, title
				FROM board
				<include refid="search"/>
				ORDER BY boardno DESC
				) B
			) C , (
			SELECT
				boardno,
				title,
				(SELECT COUNT(*) FROM good
				WHERE boardno = board.BOARDNO
				<if test="search != null and searchKind != null">
				<choose>
				 <when test="searchKind.equals('title')">
					AND title Like '%${search}%'
				 </when>
				 <when test="searchKind.equals('content')">
					AND content Like '%${search}%'
				 </when>
				</choose>
				</if>
				) AS good
			FROM board
			) A
			<where>
				AND rnum BETWEEN #{startNo} AND #{endNo}
				AND C.boardno = A.boardno
			</where>
	</select>

	<select id="selectCntAll" resultType="int" parameterType="util.Paging">
		SELECT count(*) FROM (
			<include refid="selectBoard" />
			<include refid="search"/>
		)
	</select>

	<select id="selectCntTitleBySearch" parameterType="int" resultType="int">
		SELECT count(*) FROM (
			<include refid="selectBoard" />
			<where>
<!-- 				AND CONTENT Like '%${search}%' -->
				AND TITLE Like  '%${search}%'
			</where>
		)
	</select>

	<select id="selectBySearch" resultType="Board" parameterType="util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				<include refid="selectBoard" />
				<where>
<!-- 				AND CONTENT Like '%${search}%' -->
				AND TITLE Like  '%${search}%'
				</where>
				ORDER BY boardno DESC
			) B
		)
		<where>
			AND rnum BETWEEN #{startNo } AND #{endNo}
		</where>
	</select>

	<select id="select" parameterType="int" resultType="Board">
		<include refid="selectBoard"/>
		<where>
			boardno = #{boardno}
		</where>
	</select>

	<select id="selectBoardByBoardNo" parameterType="int" resultType="Board">
		<include refid="selectBoard"/>
		<where>
			boardno = #{boardNo}
		</where>
	</select>

	<update id="hit" >
		UPDATE board
		set boardView = boardView+1
		<where>
			boardno = #{boardno}
		</where>
	</update>

	<insert id="write" parameterType="Board" >
	<selectKey resultType="int" order="BEFORE" keyProperty="boardNo">
		SELECT board_seq.nextval FROM DUAL
	</selectKey>
		INSERT INTO BOARD (boardno, title, content, userno, nickname)
		VALUES( #{boardNo}, #{title}, #{content}, #{userNo}, #{nickname} )
	</insert>


	<update id="updateBoard" parameterType="Board">
		UPDATE board
		<set>
			<if test="title != null and !title.equals('')">
				title = #{title},
			</if>
			<if test="content != null and !content.equals('')">
				content = #{content},
			</if>
		</set>
		<where>
			AND boardno = #{boardNo}
		</where>
	</update>

	<delete id="deleteBoard" parameterType="Board">
		DELETE BOARD
		WHERE BOARDNO = #{boardNo}
	</delete>

	<insert id="insertRecommend" parameterType="Good">
		INSERT INTO GOOD (USERNO, boardno)
    	VALUES (#{userno}, #{boardno})
	</insert>

	<select id="isRecomm" parameterType="Good">
		SELECT count(*)
		FROM (
			SELECT * FROM GOOD
			<where>
				AND userno = #{userno}
				AND boardno = #{boardno}
			</where>
		)
	</select>

	<delete id="deleteRecommend" parameterType="Good">
		DELETE recommend
		<where>
			AND userno = #{userno}
			AND boardno = #{boardno}
		</where>
	</delete>

	<select id="getRecommendRes" parameterType="Good" resultType="RecommendRes">
		SELECT * FROM (
			SELECT count(*) totalRecommend FROM (
				SELECT * FROM GOOD
				WHERE boardno = #{boardno}
				)
			) ,(
			SELECT count(*) isRecommend FROM (
				SELECT * FROM GOOD
				WHERE boardno = #{boardno}
				AND userno = #{userno}
				)
			)
	</select>


	<select id="getRecommend" parameterType="int" resultType="int">
		SELECT count(*) recomm FROM (
			SELECT * FROM GOOD
			WHERE boardno = #{boardno}
			)
	</select>
	
	<delete id="listDeleteByBoardNo" parameterType="java.util.ArrayList">
		DELETE FROM board
		<where>
		BOARDNO in 
		<foreach collection="arr" item="data" open="(" close=")" separator="," >
			#{data}
		</foreach>
		</where>
	</delete>
	
	
</mapper>