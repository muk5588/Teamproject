<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="login.dao.LoginDao">
	


	<select id="selectNoByIdPw" resultType="int" parameterType="User">
		select userno from usertb
		<where>
			and userid = #{userid }
			and userpw = #{userpw }
		</where>

	</select>

	<select id="selectByNo" resultType="User" parameterType="User">
		select
			userno, name, userid, nickname, gender, email, postcode, address,
			detailAddress, extraAddress, phone, gradeno
		FROM usertb
		<where>
			and userno = #{userno }
		</where>
	</select>


	<select id="historyCheck" resultType="int" parameterType="int">
		select count(*) from (
		    select userno, ACCESSDATE from ACCESSHISTORY
							 )
		<where>
			AND userNo = #{userno}
		</where>

	</select>

	<insert id="insertAccessHistory" parameterType="User">

		insert into ACCESSHISTORY (ACCESSNO, USERNO, ACCESSDATE) VALUES (ACCESSHISTORY_SEQ.nextval, #{userno}, sysdate + 9/24)

	</insert>

	<select id="loginHistory" resultType="AccessHistory">
		SELECT u.nickname,u.gender,u.name, B.USERNO, SUM(B.ACCESS_COUNT) AS ACCESS_COUNT, A.LAST_ACCESSDATE
		FROM (
				 SELECT USERNO, TRUNC(ACCESSDATE) AS ACCESSDATE, COUNT(*) AS ACCESS_COUNT
				 FROM ACCESSHISTORY
				 GROUP BY TRUNC(ACCESSDATE), USERNO
			 ) B
				 INNER JOIN usertb u ON u.userno = B.userno
				 INNER JOIN (
			SELECT USERNO, MAX(TRUNC(ACCESSDATE)) AS LAST_ACCESSDATE
			FROM ACCESSHISTORY
			GROUP BY USERNO
		) A ON A.USERNO = B.userno
		GROUP BY u.nickname,u.gender,u.name, B.USERNO,  A.LAST_ACCESSDATE
	</select>
</mapper>














