<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="login.dao.LoginDao">
	


	<select id="selectNoByIdPw" resultType="int" parameterType="User">
		select count(*) from usertb
		<where>
			and userid = #{userid }
			and userpw = CRYPTO.ENCRYPT_AES(#{userpw})
		</where>

	</select>

	<select id="selectByNo" resultType="User" parameterType="User">
		select
			userno, name, userid, nickname, gender, email, postcode, address,
			detailAddress, extraAddress, phone, gradeno
		FROM usertb
		<where>
			and userid = #{userid }
			and userpw = CRYPTO.ENCRYPT_AES(#{userpw})
		</where>
	</select>


	<select id="historyCheck" resultType="int" parameterType="int">
		select count(*) from (
		    select userno, ACCESSDATE from ACCESSHISTORY
							 )
		<where>
			AND userNo = #{userno}
		</where>

	</select>

	<insert id="insertAccessHistory" parameterType="User">

		insert into ACCESSHISTORY (ACCESSNO, USERNO, ACCESSDATE) VALUES (ACCESSHISTORY_SEQ.nextval, #{userno}, sysdate + 9/24)

	</insert>
	<select id="history" resultType="AccessHistory" parameterType="util.Paging">
		select * from(
		   select rownum rnum, B.* from (
		select ACCESSNO, USERNO, ACCESSDATE from ACCESSHISTORY order by ACCESSDATE desc
		) B )
		<where>
			AND rnum BETWEEN #{startNo } AND #{endNo}
		</where>
	</select>

	<select id="loginHistory" resultType="AccessHistory" parameterType="util.Paging">
		SELECT * 
		FROM (
		    SELECT rownum rnum, E.*
		    FROM (
		        SELECT D.userno,
		               COALESCE(C.accessCount, 0) AS accessCount,
		               C.LAST_ACCESSDATE,
		               D.nickname,
		               D.gender
		        FROM usertb D
		        LEFT JOIN (
		            SELECT A.userno, 
		                   MAX(A.accessCount) AS accessCount, 
		                   B.LAST_ACCESSDATE
		            FROM (
		                SELECT userno,
		                       TRUNC(ACCESSDATE) AS access_date,
		                       COUNT(ACCESSDATE) AS access_count,
		                       ROW_NUMBER() OVER (PARTITION BY userno ORDER BY TRUNC(ACCESSDATE)) AS accessCount
		                FROM ACCESSHISTORY
		                GROUP BY userno, TRUNC(ACCESSDATE)
		            ) A
		            LEFT JOIN (
		                SELECT USERNO, MAX(ACCESSDATE) AS LAST_ACCESSDATE
		                FROM ACCESSHISTORY
		                GROUP BY USERNO
		            ) B ON A.userno = B.userno
		            GROUP BY A.userno, B.LAST_ACCESSDATE
		        ) C ON D.userno = C.userno
		        ORDER BY C.LAST_ACCESSDATE DESC NULLS LAST
		    ) E
		  )
		<where>
			and rnum between #{startNo} and #{endNo}
		</where>
    </select>
    
    <select id="getUserBlack" resultType="String">
    	SELECT black FROM usertb WHERE userid = #{userid} 
    </select>
    
</mapper>














