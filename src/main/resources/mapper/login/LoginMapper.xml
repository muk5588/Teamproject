<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="login.dao.LoginDao">
	


	<select id="selectNoByIdPw" resultType="int" parameterType="User">
		select count(*) from usertb
		<where>
			and userid = #{userid }
			and userpw = CRYPTO.ENCRYPT_AES(#{userpw})
		</where>

	</select>

	<select id="selectByNo" resultType="User" parameterType="User">
		select
			userno, name, userid, nickname, gender, email, postcode, address,
			detailAddress, extraAddress, phone, gradeno
		FROM usertb
		<where>
			and userid = #{userid }
			and userpw = CRYPTO.ENCRYPT_AES(#{userpw})
		</where>
	</select>


	<select id="historyCheck" resultType="int" parameterType="int">
		select count(*) from (
		    select userno, ACCESSDATE from ACCESSHISTORY
							 )
		<where>
			AND userNo = #{userno}
		</where>

	</select>

	<insert id="insertAccessHistory" parameterType="User">

		insert into ACCESSHISTORY (ACCESSNO, USERNO, ACCESSDATE) VALUES (ACCESSHISTORY_SEQ.nextval, #{userno}, sysdate + 9/24)

	</insert>
	<select id="history" resultType="AccessHistory">
		select ACCESSNO, USERNO, ACCESSDATE from ACCESSHISTORY order by ACCESSDATE desc
	</select>

	<select id="loginHistory" resultType="AccessHistory">
        SELECT C.*, D.nickname, D.gender
        FROM (SELECT A.*, LAST_ACCESSDATE
              FROM (SELECT userno, Max(accessCount) AS accessCount
                    FROM (SELECT userno,
                                 TRUNC(ACCESSDATE)                                                  AS access_date,
                                 COUNT(ACCESSDATE)                                                  AS access_count,
                                 ROW_NUMBER() OVER (PARTITION BY userno ORDER BY TRUNC(ACCESSDATE)) AS accessCount
                          FROM ACCESSHISTORY
                          GROUP BY userno, TRUNC(ACCESSDATE))
                    GROUP BY userno
                    ORDER BY userno) A,
                   (SELECT USERNO, MAX(ACCESSDATE) AS LAST_ACCESSDATE
                    FROM ACCESSHISTORY
                    GROUP BY USERNO) B
              WHERE A.userno = b.userno
              ORDER BY A.userno) C,
             (SELECT *
              FROM usertb) D
        WHERE C.userno = D.userno
    </select>
</mapper>














