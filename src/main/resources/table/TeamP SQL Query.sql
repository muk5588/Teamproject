
-- 게시글추천 TB : SEQ, PK 없음

--회원 TB
--DROP TABLE USERTB;
CREATE TABLE USERTB (
	 USERNO 	NUMBER		NOT NULL,
	 GRADENO 	NUMBER	DEFAULT 1	NOT NULL,
	 NICKNAME 	VARCHAR2(300)		NOT NULL,
	 NAME 	VARCHAR2(100)		NOT NULL,
	 USERID 	VARCHAR2(300)		UNIQUE NOT NULL,
	 USERPW 	VARCHAR2(500)		NOT NULL,
	 GENDER 	VARCHAR2(1)		NULL,
	 EMAIL 	VARCHAR2(500)		NOT NULL,
	 PHONE 	VARCHAR2(50)		NOT NULL,
	 POSTCODE 	NUMBER		NOT NULL,
	 ADDRESS        VARCHAR2(1000)      NOT NULL,
	 DETAILADDRESS 	VARCHAR2(500)		NOT NULL,
	 EXTRAADDRESS 	VARCHAR2(500)		NOT NULL,
	 PROFILE 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 SUSER_NO 	VARCHAR2(1500)		NULL,
	 BLACK 	CHAR(1)	DEFAULT 'N'	NOT NULL
);

--ALTER TABLE  USERTB  DROP CONSTRAINT  PK_USER;
ALTER TABLE  USERTB  ADD CONSTRAINT  PK_USER  PRIMARY KEY (
	 USERNO 
);
COMMENT ON COLUMN  USERTB . USERNO  IS '시퀀스';
COMMENT ON COLUMN  USERTB . USERID  IS 'UNIQUE';
COMMENT ON COLUMN  USERTB . PROFILE  IS 'Y';
COMMENT ON COLUMN  USERTB . BLACK  IS 'Y/N - 총 신고가 5회 이상이면 정지';

--유저 PK SEQ
--DROP SEQUENCE USER_SEQ;
CREATE SEQUENCE USER_SEQ;
-------------------------------------------------------------------

--회원 등급 TB
--DROP TABLE  GRADE;
CREATE TABLE  GRADE  (
	 GRADENO 	NUMBER		NOT NULL,
	 GRADENAME 	VARCHAR2(100)		NOT NULL,
	 COMM       VARCHAR2(500)       NOR NULL
);
ALTER TABLE  GRADE  ADD CONSTRAINT  PK_GRADE  PRIMARY KEY (
	 GRADENO 
);
-------------------------------------------------------------------
--프로필파일 TB 
--DROP TABLE  PROFILE;
CREATE TABLE  PROFILE  (
	 NO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ORIGIN_NAME 	VARCHAR2(2000)		NOT NULL,
	 STORED_NAME 	VARCHAR2(2000)		NOT NULL,
	 USE 	CHAR(1)	DEFAULT 'N'	NOT NULL
);
ALTER TABLE  PROFILE  ADD CONSTRAINT  PK_PROFILE  PRIMARY KEY (
	 NO 
);
COMMENT ON COLUMN  PROFILE . STORED_NAME  IS '원본파일 + UUID6자리';
COMMENT ON COLUMN  PROFILE . USE  IS 'Y';

--프로필파일 PK SEQ
--DROP SEQUENCE PROFILE_SEQ;
CREATE SEQUENCE PROFILE_SEQ;

-------------------------------------------------------------------

--고객문의 TB
--DROP TABLE  INQUIRY;
CREATE TABLE  INQUIRY  (
	 INQUIRYNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 INQUIRYDETAIL 	VARCHAR2(2000)		NOT NULL,
	 INQUIRYDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 MANAGERNO 	NUMBER		NULL,
	 ANSWER 	VARCHAR2(4000)		NULL,
	 COMPLETE 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 ANSWERDATE 	DATE		NULL
);
ALTER TABLE  INQUIRY  ADD CONSTRAINT  PK_INQUIRY  PRIMARY KEY (
	 INQUIRYNO 
);
COMMENT ON COLUMN  INQUIRY . MANAGERNO  IS '관리자 USERNO';
COMMENT ON COLUMN  INQUIRY . COMPLETE  IS '처리시 Y';

--고객문의 PK SEQ
--DROP SEQUENCE INQUIRY_SEQ;
CREATE SEQUENCE INQUIRY_SEQ;

-------------------------------------------------------------------

--회원주문 TB
--DROP TABLE  USERORDER;
CREATE TABLE  USERORDER  (
	 ORDERNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 USERNAME 	VARCHAR2(2000)		NOT NULL,
	 PHONE 	VARCHAR2(50)		NOT NULL,
	 PAY 	VARCHAR2(200)		NULL,
	 TOTALPRICE 	NUMBER		NOT NULL,
	 POST_CODE 	NUMBER		NOT NULL,
	 ADDRESS1 	VARCHAR2(500)		NOT NULL,
	 ADDRESS2 	VARCHAR2(500)		NOT NULL,
	 METHOD 	VARCHAR2(500)		NULL,
	 PARAMOUNT 	NUMBER		NOT NULL,
	 ORDERDATE 	DATE	DEFAULT SYSDATE	NOT NULL
);
ALTER TABLE  USERORDER  ADD CONSTRAINT  PK_USERORDER  PRIMARY KEY (
	 ORDERNO 
);

COMMENT ON COLUMN  USERORDER . USERNAME  IS '구매자가 수정했을 경우 대비, 구매자 정보와 연동 및 수정 가능';
COMMENT ON COLUMN  USERORDER . PHONE  IS '구매자가 수정했을 경우 대비, 구매자 정보와 연동 및 수정 가능';
COMMENT ON COLUMN  USERORDER . TOTALPRICE  IS '주문 상세 주문가격의 합산으로 처리';
COMMENT ON COLUMN  USERORDER . POST_CODE  IS '기본값은 구매자 정보와 연동에서 보여주기';
COMMENT ON COLUMN  USERORDER . PARAMOUNT  IS '상품별 총 금액을 더한 값 - 쿠폰 할인률(%)';
COMMENT ON COLUMN  USERORDER . ORDERDATE  IS '결제 완료된 시간 자동으로 넣기';

--회원주문 PK SEQ
--DROP SEQUENCE USERORDER_SEQ;
CREATE SEQUENCE USERORDER_SEQ;

-------------------------------------------------------------------

--상품정보 TB
--DROP TABLE  ITEM;
CREATE TABLE  ITEM  (
	 ITEMNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ITEMNAME 	VARCHAR2(500)		NOT NULL,
	 CREATEDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 PRICE 	NUMBER		NOT NULL,
	 ITEMCOMM 	VARCHAR2(4000)		NOT NULL,
	 REMAIN 	NUMBER	DEFAULT 1	NULL
);
ALTER TABLE  ITEM  ADD CONSTRAINT  PK_ITEM  PRIMARY KEY (
	 ITEMNO 
);
COMMENT ON COLUMN  ITEM . USERNO  IS '등록한사람';


--상품정보 PK SEQ
--DROP SEQUENCE ITEM_SEQ;
CREATE SEQUENCE ITEM_SEQ;

-------------------------------------------------------------------

--장바구니 TB
--DROP TABLE  BASKET;
CREATE TABLE  BASKET  (
	 BASKETNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ITEMNO 	NUMBER		NOT NULL,
	 QUANTITY 	NUMBER		NOT NULL,
	 ADDITIONALDATE 	DATE	DEFAULT SYSDATE	NOT NULL
);
ALTER TABLE  BASKET  ADD CONSTRAINT  PK_BASKET  PRIMARY KEY (
	 BASKETNO 
);
COMMENT ON COLUMN  BASKET . ADDITIONALDATE  IS '정렬기준';

--장바구니 PK SEQ
--DROP SEQUENCE BASKET_SEQ;
CREATE SEQUENCE BASKET_SEQ;

-------------------------------------------------------------------

--상품정보파일 TB
--DROP TABLE  ITEMFILE;
CREATE TABLE  ITEMFILE  (
	 FILENO 	NUMBER		NOT NULL,
	 ITEMNO 	NUMBER		NOT NULL,
	 ORIGIN_NAME 	VARCHAR2(1000)		NOT NULL,
	 STORED_NAME 	VARCHAR2(1000)		NOT NULL
);
ALTER TABLE  ITEMFILE  ADD CONSTRAINT  PK_ITEMFILE  PRIMARY KEY (
	 FILENO 
);

--상품정보파일 PK SEQ
--DROP SEQUENCE ITEMFILE_SEQ;
CREATE SEQUENCE ITEMFILE_SEQ;

-------------------------------------------------------------------

--상품신고 TB
--DROP TABLE  ITEMREPORT;
CREATE TABLE  ITEMREPORT  (
	 REPORTNO 	NUMBER		NOT NULL,
	 ITEMNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ITEMREPORTNO 	NUMBER		NOT NULL,
	 REPORTCONTENT 	VARCHAR2(2000)		NOT NULL,
	 REPORTDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 MANAGERNO 	NUMBER		NULL,
	 RESULT 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 RESULTCONTENT 	VARCHAR2(4000)		NULL,
	 RESULTDATE 	DATE		NULL
);
ALTER TABLE  ITEMREPORT  ADD CONSTRAINT  PK_ITEMREPORT  PRIMARY KEY (
	 REPORTNO 
);

COMMENT ON COLUMN  ITEMREPORT . USERNO  IS '신고자';
COMMENT ON COLUMN  ITEMREPORT . RESULT  IS 'Y';

--상품신고 PK SEQ
--DROP SEQUENCE ITEMREPORT_SEQ;
CREATE SEQUENCE ITEMREPORT_SEQ;

-------------------------------------------------------------------

--상품리뷰 TB
--DROP TABLE  REVIEW;
CREATE TABLE  REVIEW  (
	 REVIEWNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ITEMNO 	NUMBER		NOT NULL,
	 REVIEWTITLE 	VARCHAR2(2000)		NOT NULL,
	 REVIEWCONTENT 	VARCHAR2(2000)		NOT NULL,
	 CREATEREVIEWDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 UPDATEREVIEWDATE 	DATE		NULL
);
ALTER TABLE  REVIEW  ADD CONSTRAINT  PK_REVIEW  PRIMARY KEY (
	 REVIEWNO 
);

--상품리뷰 PK SEQ
--DROP SEQUENCE REVIEW_SEQ;
CREATE SEQUENCE REVIEW_SEQ;

-------------------------------------------------------------------

--상품리뷰파일 TB
--DROP TABLE  REVIEWFILE;
CREATE TABLE  REVIEWFILE  (
	 FILENO 	NUMBER		NOT NULL,
	 REVIEWNO 	NUMBER		NOT NULL,
	 ORIGIN_NAME 	VARCHAR2(1000)		NOT NULL,
	 STORED_NAME 	VARCHAR2(1000)		NOT NULL
);
ALTER TABLE  REVIEWFILE  ADD CONSTRAINT  PK_REVIEWFILE  PRIMARY KEY (
	 FILENO 
);

COMMENT ON COLUMN  REVIEWFILE . STORED_NAME  IS '원본파일 + UUID6자리';

--상품리뷰파일 PK SEQ
--DROP SEQUENCE REVIEWFILE_SEQ;
CREATE SEQUENCE REVIEWFILE_SEQ;

-------------------------------------------------------------------

--쪽지 TB
--DROP TABLE  MESSAGE;
CREATE TABLE  MESSAGE  (
	 MESSAGENO 	NUMBER		NOT NULL,
	 SENDUSERNO 	NUMBER		NOT NULL,
	 TOUSERNO 	NUMBER		NOT NULL,
	 CONTENT 	VARCHAR2(3000)		NOT NULL,
	 SENDDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 READ 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 SAVE 	CHAR(1)	DEFAULT 'N'	NOT NULL
);
ALTER TABLE  MESSAGE  ADD CONSTRAINT  PK_MESSAGE  PRIMARY KEY (
	 MESSAGENO 
);
COMMENT ON COLUMN  MESSAGE . READ  IS 'Y';
COMMENT ON COLUMN  MESSAGE . SAVE  IS 'Y';

--쪽지 PK SEQ
--DROP SEQUENCE MESSAGE_SEQ;
CREATE SEQUENCE MESSAGE_SEQ;

-------------------------------------------------------------------

--주문상세 TB
--DROP TABLE  ORDERITEM;
CREATE TABLE  ORDERITEM  (
	 ORDERITEMNO 	NUMBER		NOT NULL,
	 ORDERNO 	NUMBER		NOT NULL,
	 ITEMNO 	NUMBER		NOT NULL,
	 ITEMNAME 	VARCHAR2(2000)		NOT NULL,
	 ORDER_QUANTITY 	NUMBER		NOT NULL,
	 PRICE 	NUMBER		NOT NULL,
	 COUPONNO 	NUMBER		NULL
);
ALTER TABLE  ORDERITEM  ADD CONSTRAINT  PK_ORDERITEM  PRIMARY KEY (
	 ORDERITEMNO 
);
COMMENT ON COLUMN  ORDERITEM . ITEMNAME  IS '상품정보 테이블에서 당시 기준으로, 변경시에도 확인가능하게';
COMMENT ON COLUMN  ORDERITEM . PRICE  IS '- 상품 정보 수정 시, 결제 시 정보와 안맞음';
COMMENT ON COLUMN  ORDERITEM . COUPONNO  IS '사용시 사용여부 Y로 UPDATE';

--주문상세 PK SEQ
--DROP SEQUENCE ORDERITEM_SEQ;
CREATE SEQUENCE ORDERITEM_SEQ;

-------------------------------------------------------------------

--쿠폰 TB
--DROP TABLE  COUPON;
CREATE TABLE  COUPON  (
	 COUPONNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 COUPONNAME 	VARCHAR2(500)		NOT NULL,
	 SALEPER 	NUMBER		NOT NULL,
	 USE 	CHAR(1)	DEFAULT 'N'	NOT NULL
);
ALTER TABLE  COUPON  ADD CONSTRAINT  PK_COUPON  PRIMARY KEY (
	 COUPONNO 
);
COMMENT ON COLUMN  COUPON . SALEPER  IS '%값';
COMMENT ON COLUMN  COUPON . USE  IS 'Y';

--쿠폰 PK SEQ
--DROP SEQUENCE COUPON_SEQ;
CREATE SEQUENCE COUPON_SEQ;

-------------------------------------------------------------------

--고객문의파일 TB
--DROP TABLE  INQUIRYFILE;
CREATE TABLE  INQUIRYFILE  (
	 FILENO 	NUMBER		NOT NULL,
	 INQUIRYNO 	NUMBER		NOT NULL,
	 ORIGIN_NAME 	VARCHAR2(1000)		NOT NULL,
	 STORED_NAME 	VARCHAR2(1000)		NOT NULL
);
ALTER TABLE  INQUIRYFILE  ADD CONSTRAINT  PK_INQUIRYFILE  PRIMARY KEY (
	 FILENO 
);
COMMENT ON COLUMN  INQUIRYFILE . STORED_NAME  IS '원본파일 + UUID6자리';

--고객문의파일 PK SEQ
--DROP SEQUENCE INQUIRYFILE_SEQ;
CREATE SEQUENCE INQUIRYFILE_SEQ;

-------------------------------------------------------------------

--접속이력 TB
--DROP TABLE  ACCESSHISTORY;
CREATE TABLE  ACCESSHISTORY  (
	 ACCESSNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 ACCESSDATE 	DATE	DEFAULT SYSDATE
);
ALTER TABLE  ACCESSHISTORY  ADD CONSTRAINT  PK_ACCESS  PRIMARY KEY (
	 ACCESSNO 
);
COMMENT ON COLUMN  ACCESSHISTORY . ACCESSNO  IS '시퀀스';
COMMENT ON COLUMN  ACCESSHISTORY . ACCESSDATE  IS 'SYSDATE + 같은 날짜라면 UPDATE';

--접속이력 PK SEQ
--DROP SEQUENCE ACCESSHISTORY_SEQ;
CREATE SEQUENCE ACCESSHISTORY_SEQ;

-------------------------------------------------------------------

--상품리뷰신고 TB
--DROP TABLE  REVIEWREPORT;
CREATE TABLE  REVIEWREPORT  (
	 REPORTNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 REVIEWNO 	NUMBER		NOT NULL,
	 REPORTCONTENT 	VARCHAR2(2000)		NOT NULL,
	 REPORTDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 MANAGERNO 	NUMBER		NULL,
	 RESULTCONTENT 	VARCHAR2(2000)		NULL,
	 RESULT 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 RESULTDATE 	DATE		NULL
);
ALTER TABLE  REVIEWREPORT  ADD CONSTRAINT  PK_REVIEWREPORT  PRIMARY KEY (
	 REPORTNO 
);
COMMENT ON COLUMN  REVIEWREPORT . USERNO  IS '신고자';
COMMENT ON COLUMN  REVIEWREPORT . MANAGERNO  IS '관리자 USERNO';
COMMENT ON COLUMN  REVIEWREPORT . RESULT  IS 'Y';

--상품리뷰신고 PK SEQ
--DROP SEQUENCE REVIEWREPORT_SEQ;
CREATE SEQUENCE REVIEWREPORT_SEQ;

-------------------------------------------------------------------

--게시판 TB
--DROP TABLE  BOARD;
CREATE TABLE  BOARD  (
	 BOARDNO 	NUMBER		NOT NULL,
	 CATEGORYNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 NICKNAME 	VARCHAR2(300)		NOT NULL,
	 TITLE 	VARCHAR2(2000)		NOT NULL,
	 CONTENT 	VARCHAR2(4000)		NOT NULL,
	 CREATEDATE 	DATE	DEFAULT SYSDATE	NULL,
	 UPDATEDATE 	DATE		NULL,
	 BOARDVIEW 	NUMBER	DEFAULT 0	NOT NULL
);
ALTER TABLE  BOARD  ADD CONSTRAINT  PK_BOARD  PRIMARY KEY (
	 BOARDNO 
);
COMMENT ON COLUMN  BOARD . BOARDNO  IS '시퀀스처리';
COMMENT ON COLUMN  BOARD . USERNO  IS '작성자';
COMMENT ON COLUMN  BOARD . NICKNAME  IS '작성자 정보 연동';
COMMENT ON COLUMN  BOARD . BOARDVIEW  IS 'UPDATE로 +1 씩';

--게시판 PK SEQ
--DROP SEQUENCE BOARD_SEQ;
CREATE SEQUENCE BOARD_SEQ;

-------------------------------------------------------------------

--게시판대분류 TB
--DROP TABLE  CATEGORY;
CREATE TABLE  CATEGORY  (
	 CATEGORYNO 	NUMBER		NOT NULL,
	 GRADENO 	NUMBER		NOT NULL,
	 CATEGORYNAME 	VARCHAR2(500)		NOT NULL
);
ALTER TABLE  CATEGORY  ADD CONSTRAINT  PK_CATEGORY  PRIMARY KEY (
	 CATEGORYNO 
);
COMMENT ON COLUMN  CATEGORY . GRADENO  IS '게시판 조회 등급별 제한에 이용';
COMMENT ON COLUMN  CATEGORY . CATEGORYNAME  IS '여행지 정보, 사진 갤러리, 지역별 여행, 여행 Q&A, 이벤트';

-------------------------------------------------------------------

--게시판첨부파일 TB
--DROP TABLE  BOARDFILE;
CREATE TABLE  BOARDFILE  (
	 FILENO 	NUMBER		NOT NULL,
	 BOARDNO 	NUMBER		NOT NULL,
	 ORIGIN_NAME 	VARCHAR2(2000)		NOT NULL,
	 STORED_NAME 	VARCHAR2(2000)		NOT NULL
);
ALTER TABLE  BOARDFILE  ADD CONSTRAINT  PK_BOARDFILE  PRIMARY KEY (
	 FILENO 
);
COMMENT ON COLUMN  BOARDFILE . STORED_NAME  IS '원본이름+ UUID 6자리';

--게시판첨부파일 PK SEQ
--DROP SEQUENCE BOARDFILE_SEQ;
CREATE SEQUENCE BOARDFILE_SEQ;

-------------------------------------------------------------------

--댓글 TB
--DROP TABLE  COMMENTTB;
CREATE TABLE  COMMENTTB  (
	 COMMNO 	NUMBER		NOT NULL,
	 BOARDNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 COMMCONTENT 	VARCHAR2(4000)		NOT NULL,
	 COMMDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 COMMUPDATEDATE 	DATE		NULL
);
ALTER TABLE  COMMENTTB  ADD CONSTRAINT  PK_COMMENT  PRIMARY KEY (
	 COMMNO 
);
COMMENT ON COLUMN  COMMENTTB . BOARDNO  IS '시퀀스처리';

--댓글 PK SEQ
--DROP SEQUENCE COMMENTTB_SEQ;
CREATE SEQUENCE COMMENTTB_SEQ;

-------------------------------------------------------------------

--게시글신고 TB
--DROP TABLE  BOARDREPORT;
CREATE TABLE  BOARDREPORT  (
	 BOARDREPORTNO 	NUMBER		NOT NULL,
	 BOARDNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 REPORTTYPENO 	NUMBER		NOT NULL,
	 REPORTCONTENT 	VARCHAR2(4000)		NOT NULL,
	 REPORTDATE 	DATE		NOT NULL,
	 MANAGERNO 	NUMBER		NULL,
	 RESULTCONTENT 	VARCHAR2(4000)		NULL,
	 RESULT 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 RESULTDATE 	DATE		NULL
);
ALTER TABLE  BOARDREPORT  ADD CONSTRAINT  PK_BOARDREPORT  PRIMARY KEY (
	 BOARDREPORTNO 
);
COMMENT ON COLUMN  BOARDREPORT . USERNO  IS '신고자';
COMMENT ON COLUMN  BOARDREPORT . MANAGERNO  IS '관리자 USERNO';
COMMENT ON COLUMN  BOARDREPORT . RESULT  IS '답변처리시 Y';

--게시글신고 PK SEQ
--DROP SEQUENCE BOARDREPORT_SEQ;
CREATE SEQUENCE BOARDREPORT_SEQ;

-------------------------------------------------------------------

--댓글신고 TB
--DROP TABLE  COMMREPORT;
CREATE TABLE  COMMREPORT  (
	 COMMREPORTNO 	NUMBER		NOT NULL,
	 COMMREPORTTYPENO 	NUMBER		NOT NULL,
	 COMMNO 	NUMBER		NOT NULL,
	 USERNO 	NUMBER		NOT NULL,
	 CONTENT 	VARCHAR2(4000)		NOT NULL,
	 COMMREPORTDATE 	DATE	DEFAULT SYSDATE	NOT NULL,
	 MANAGERNO 	NUMBER		NULL,
	 RESULTCONTENT 	VARCHAR2(4000)		NULL,
	 RESULT 	CHAR(1)	DEFAULT 'N'	NOT NULL,
	 RESULTDATE 	DATE		NULL
);
ALTER TABLE  COMMREPORT  ADD CONSTRAINT  PK_COMMREPORT  PRIMARY KEY (
	 COMMREPORTNO 
);
COMMENT ON COLUMN  COMMREPORT . USERNO  IS '신고자';
COMMENT ON COLUMN  COMMREPORT . MANAGERNO  IS '관리자 USERNO';
COMMENT ON COLUMN  COMMREPORT . RESULT  IS '처리시 Y';

--댓글신고 PK SEQ
--DROP SEQUENCE COMMREPORT_SEQ;
CREATE SEQUENCE COMMREPORT_SEQ;

-------------------------------------------------------------------

--댓글신고분류 TB
--DROP TABLE  COMMREPORTTYPE;
CREATE TABLE  COMMREPORTTYPE  (
	 COMMREPORTTYPENO 	NUMBER		NOT NULL,
	 COMMREPORT 	VARCHAR2(2000)		NOT NULL
);
ALTER TABLE  COMMREPORTTYPE  ADD CONSTRAINT  PK_COMMREPORTTYPE  PRIMARY KEY (
	 COMMREPORTTYPENO 
);
COMMENT ON COLUMN  COMMREPORTTYPE . COMMREPORT  IS '도배, 허위사실 유포 등등';

--댓글신고분류 PK SEQ
--DROP SEQUENCE COMMREPORTTYPE_SEQ;
CREATE SEQUENCE COMMREPORTTYPE_SEQ;

-------------------------------------------------------------------

--게시글 신고 분류
--DROP TABLE  BOARDREPORTTYPE;
CREATE TABLE  BOARDREPORTTYPE  (
	 REPORTTYPENO 	NUMBER		NOT NULL,
	 REPORTTYPE 	VARCHAR2(2000)		NOT NULL
);
ALTER TABLE  BOARDREPORTTYPE  ADD CONSTRAINT  PK_BOARDREPORTTYPE  PRIMARY KEY (
	 REPORTTYPENO 
);
COMMENT ON COLUMN  BOARDREPORTTYPE . REPORTTYPE  IS '도배, 허위사실 유포 등등';


--게시글신고분류 PK SEQ
--DROP SEQUENCE BOARDREPORTTYPE_SEQ;
CREATE SEQUENCE BOARDREPORTTYPE_SEQ;

-------------------------------------------------------------------

--상품신고분류 TB
--DROP TABLE  ITEMREPORTTYPE;
CREATE TABLE  ITEMREPORTTYPE  (
	 ITEMREPORTNO 	NUMBER		NOT NULL,
	 ITEMREPORT 	VARCHAR2(2000)		NOT NULL
);
ALTER TABLE  ITEMREPORTTYPE  ADD CONSTRAINT  PK_ITEMREPORTTYPE  PRIMARY KEY (
	 ITEMREPORTNO 
);
COMMENT ON COLUMN  ITEMREPORTTYPE . ITEMREPORT  IS '사실과 다른내용 적시 등';

--상품신고분류 PK SEQ
--DROP SEQUENCE ITEMREPORTTYPE_SEQ;
CREATE SEQUENCE ITEMREPORTTYPE_SEQ;

-------------------------------------------------------------------

--게시판추천 TB
--DROP TABLE  GOOD;
CREATE TABLE  GOOD  (
	 USERNO 	NUMBER		NOT NULL,
	 BOARDNO 	NUMBER		NOT NULL
);

-------------------------------------------------------------------
-------------------------------------------------------------------
--참조키 설정 
--USERTB

--ALTER TABLE USERTB DROP CONSTRAINT FK_USER1;
ALTER TABLE USERTB ADD CONSTRAINT FK_USER1 FOREIGN KEY (GRADENO) REFERENCES GRADE(GRADENO);

--ALTER TABLE ACCESSHISTORY DROP CONSTRAINT FK_ACCESSHISTORY;
ALTER TABLE ACCESSHISTORY ADD CONSTRAINT FK_ACCESSHISTORY FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE PROFILE  DROP CONSTRAINT FK_PROFILE;
ALTER TABLE PROFILE  ADD CONSTRAINT FK_PROFILE FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE INQUIRY  DROP CONSTRAINT FK_INQUIRY;
ALTER TABLE INQUIRY  ADD CONSTRAINT FK_INQUIRY FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE REVIEW  DROP CONSTRAINT FK_REVIEW;
ALTER TABLE REVIEW  ADD CONSTRAINT FK_REVIEW FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE MESSAGE  DROP CONSTRAINT FK_SENDMESSAGE;
ALTER TABLE MESSAGE  ADD CONSTRAINT FK_SENDMESSAGE FOREIGN KEY (SENDUSERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE MESSAGE  DROP CONSTRAINT FK_TOMESSAGE;
ALTER TABLE MESSAGE  ADD CONSTRAINT FK_TOMESSAGE FOREIGN KEY (ToUSERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE REVIEWREPORT DROP CONSTRAINT FK_REVIEWREPORT;
ALTER TABLE REVIEWREPORT ADD CONSTRAINT FK_REVIEWREPORT FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE REVIEWREPORT DROP CONSTRAINT FK_REVIEWREPORTMGR;
ALTER TABLE REVIEWREPORT ADD CONSTRAINT FK_REVIEWREPORTMGR FOREIGN KEY (MANAGERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE USERORDER DROP CONSTRAINT;
ALTER TABLE USERORDER ADD CONSTRAINT FK_USERORDER FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE COUPON DROP CONSTRAINT FK_coupon;
ALTER TABLE COUPON ADD CONSTRAINT FK_coupon FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE ITEM DROP CONSTRAINT FK_ITEM;
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE BASKET DROP CONSTRAINT FK_BASKET;
ALTER TABLE BASKET ADD CONSTRAINT FK_BASKET FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE ITEMREPORT DROP CONSTRAINT FK_ITEMREPORT;
ALTER TABLE ITEMREPORT ADD CONSTRAINT FK_ITEMREPORT FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE ITEMREPORT DROP CONSTRAINT FK_ITEMREPORTMGR;
ALTER TABLE ITEMREPORT ADD CONSTRAINT FK_ITEMREPORTMGR FOREIGN KEY (MANAGERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE BOARDREPORT DROP CONSTRAINT FK_BOARDREPORT;
ALTER TABLE BOARDREPORT ADD CONSTRAINT FK_BOARDREPORT FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE BOARDREPORT DROP CONSTRAINT FK_BOARDREPORTMGR;
ALTER TABLE BOARDREPORT ADD CONSTRAINT FK_BOARDREPORTMGR FOREIGN KEY (MANAGERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE BOARD DROP CONSTRAINT FK_BOARD;
ALTER TABLE BOARD ADD CONSTRAINT FK_BOARD FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE COMMENTTB DROP CONSTRAINT FK_COMMENTTB;
ALTER TABLE COMMENTTB ADD CONSTRAINT FK_COMMENTTB FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE COMMREPORT DROP CONSTRAINT FK_COMMREPORT;
ALTER TABLE COMMREPORT ADD CONSTRAINT FK_COMMREPORT FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--ALTER TABLE GOOD DROP CONSTRAINT FK_GOOD;
ALTER TABLE GOOD ADD CONSTRAINT FK_GOOD FOREIGN KEY (USERNO) REFERENCES USERTB(USERNO);

--------------userTB------------------------------------------------------------------------------------------

--기타 FK 연결
--ALTER TABLE INQUIRYFILE DROP CONSTRAINT FK_INQUIRYFILE;
ALTER TABLE INQUIRYFILE ADD CONSTRAINT FK_INQUIRYFILE FOREIGN KEY (INQUIRYNO) REFERENCES INQUIRY(INQUIRYNO);

--ALTER TABLE REVIEWFILE DROP CONSTRAINT FK_REVIEWFILE;
ALTER TABLE REVIEWFILE ADD CONSTRAINT FK_REVIEWFILE FOREIGN KEY (REVIEWNO) REFERENCES REVIEW(REVIEWNO);

--ALTER TABLE REVIEWREPORT DROP CONSTRAINT FK_REVIEWNOREPORT;
ALTER TABLE REVIEWREPORT ADD CONSTRAINT FK_REVIEWNOREPORT FOREIGN KEY (REVIEWNO) REFERENCES REVIEW(REVIEWNO);

--ALTER TABLE REVIEW DROP CONSTRAINT FK_REVIEWITEM;
ALTER TABLE REVIEW ADD CONSTRAINT FK_REVIEWITEM FOREIGN KEY (ITEMNO) REFERENCES ITEM(ITEMNO);

--ALTER TABLE ITEMREPORT DROP CONSTRAINT FK_REPORTITEMNO;
ALTER TABLE ITEMREPORT ADD CONSTRAINT FK_REPORTITEMNO FOREIGN KEY (ITEMNO) REFERENCES ITEM(ITEMNO);

--ALTER TABLE ORDERITEM DROP CONSTRAINT FK_ORDERITEMCOUPON;
ALTER TABLE ORDERITEM ADD CONSTRAINT FK_ORDERITEMCOUPON FOREIGN KEY (COUPONNO) REFERENCES coupon(COUPONNO);

--ALTER TABLE ORDERITEM DROP CONSTRAINT FK_ORDERITEMNO;
ALTER TABLE ORDERITEM ADD CONSTRAINT FK_ORDERITEMNO FOREIGN KEY (ITEMNO) REFERENCES ITEM(ITEMNO);

--ALTER TABLE ORDERITEM DROP CONSTRAINT FK_ORDERITEMUSERORDER;
ALTER TABLE ORDERITEM ADD CONSTRAINT FK_ORDERITEMUSERORDER FOREIGN KEY (orderno) REFERENCES userorder(orderno);

--ALTER TABLE ITEMFILE DROP CONSTRAINT FK_ITEMFILE;
ALTER TABLE ITEMFILE ADD CONSTRAINT FK_ITEMFILE FOREIGN KEY (ITEMNO) REFERENCES item(ITEMNO);

--ALTER TABLE BASKET DROP CONSTRAINT FK_BASKETITEM;
ALTER TABLE BASKET ADD CONSTRAINT FK_BASKETITEM FOREIGN KEY (ITEMNO) REFERENCES item(ITEMNO);

--ALTER TABLE GOOD DROP CONSTRAINT FK_GOODBOARDNO;
ALTER TABLE GOOD ADD CONSTRAINT FK_GOODBOARDNO FOREIGN KEY (BOARDNO) REFERENCES board(BOARDNO);

--ALTER TABLE BOARDREPORT DROP CONSTRAINT FK_BOARDREPORTTYPE;
ALTER TABLE BOARDREPORT ADD CONSTRAINT FK_BOARDREPORTTYPE FOREIGN KEY (reportTypeno) REFERENCES boardreportType(reportTypeno);

--ALTER TABLE CATEGORY DROP CONSTRAINT FK_CATEGORYGRADE;
ALTER TABLE CATEGORY ADD CONSTRAINT FK_CATEGORYGRADE FOREIGN KEY (GRADENO) REFERENCES grade(GRADENO);

--ALTER TABLE BOARDREPORT DROP CONSTRAINT FK_BOARDREPORTNO;
ALTER TABLE BOARDREPORT ADD CONSTRAINT FK_BOARDREPORTNO FOREIGN KEY (BOARDNO) REFERENCES BOARD(BOARDNO);

--ALTER TABLE BOARD DROP CONSTRAINT FK_BOARDCATEGORY;
ALTER TABLE BOARD ADD CONSTRAINT FK_BOARDCATEGORY FOREIGN KEY (CATEGORYNO) REFERENCES CATEGORY(CATEGORYNO);

--ALTER TABLE BOARDFILE DROP CONSTRAINT FK_BOARDFILE;
ALTER TABLE BOARDFILE ADD CONSTRAINT FK_BOARDFILE FOREIGN KEY (BOARDNO) REFERENCES BOARD(BOARDNO);

--ALTER TABLE COMMENTTB DROP CONSTRAINT FK_COMMENTBOARD;
ALTER TABLE COMMENTTB ADD CONSTRAINT FK_COMMENTBOARD FOREIGN KEY (BOARDNO) REFERENCES BOARD(BOARDNO);

--ALTER TABLE COMMREPORT DROP CONSTRAINT FK_COMMENTREPORTNO;
ALTER TABLE COMMREPORT ADD CONSTRAINT FK_COMMENTREPORTNO FOREIGN KEY (COMMNO) REFERENCES COMMENTTB(COMMNO);

--ALTER TABLE COMMREPORT DROP CONSTRAINT FK_COMMREPORTTYPE;
ALTER TABLE COMMREPORT ADD CONSTRAINT FK_COMMREPORTTYPE FOREIGN KEY (COMMREPORTTYPENO) REFERENCES COMMREPORTTYPE(COMMREPORTTYPENO);

--ALTER TABLE ITEMREPORT DROP CONSTRAINT FK_itemreportType;
ALTER TABLE ITEMREPORT ADD CONSTRAINT FK_itemreportType FOREIGN KEY (ITEMREPORTNO) REFERENCES ITEMREPORTTYPE(ITEMREPORTNO);





































































